# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

input AddCommentInput {
  body: String!
  todoId: String!
}

input ChangePasswordInput {
  password: String!
  token: String!
}

type Comment {
  id: ID!
  body: String!
  created: DateTime!
  updated: DateTime!
  user: User!
  todo: Todo!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

"""Gender"""
enum Gender {
  MALE
  FEMALE
}

type Mutation {
  addTodo(name: String!): Todo
  addComment(addCommentInput: AddCommentInput!): Boolean!
  deleteTodo(todoId: ID!): Boolean!
  deleteComment(commentId: ID!): Boolean!
  createProfile(photo: String!, gender: Gender!): Profile
  deleteUser: Boolean!
  confirmUser(token: String!): Boolean!
  forgotPassword(email: String!): Boolean!
  changePassword(changePasswordInput: ChangePasswordInput!): User
  logout: Boolean!
  login(password: String!, email: String!): Boolean!
  register(registerInput: RegisterInput!): Boolean!
}

input PasswordInput {
  password: String!
}

type Profile {
  id: ID!
  gender: Gender
  photo: String!
  user: User!
}

type Query {
  profile: Profile
  testQueryBuilder: Boolean!
  testTodos: [Todo!]!
  todos: [Todo!]!
  me: User
  users: [User!]!
  getUser: User
  getUserProfile: User
}

input RegisterInput {
  password: String!
  email: String!
}

type Subscription {
  addedTodo: Todo!
}

type Todo {
  id: ID!
  name: String!
  userId: String!
  created: DateTime!
  updated: DateTime!
  user: User!
  comments: [Comment!]!
}

type User {
  id: ID!
  name: String
  facebookId: String
  email: String!
  nickname: String!
  created: DateTime!
  updated: DateTime!
  profile: Profile
  todos: [Todo!]!
  comments: [Comment!]!
}
